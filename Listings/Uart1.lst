C51 COMPILER V9.56.0.0   UART1                                                             10/02/2017 20:59:50 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE UART1
OBJECT MODULE PLACED IN .\Objects\Uart1.obj
COMPILER INVOKED BY: D:\Keil_v5\C51\BIN\C51.EXE Uart1.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\Uar
                    -t1.lst) TABS(2) OBJECT(.\Objects\Uart1.obj)

line level    source

   1          #include "Uart.h"
   2          #include<string.h>
   3          #include<reg52.h>
   4          typedef unsigned int uint;
   5          typedef unsigned char byte;
   6          
   7          byte buy = 0;
   8          uint rxIndex = 0;
   9          byte idata buff[REVEIVE_BUFF_SIZE] ;
  10          sfr IAP_CONTR   =   0xC7; 
  11          
  12          byte isRec = 0;
  13          byte isHand = 0;
  14          
  15          byte response = 0;
  16          
  17          void Uart1() interrupt 4 using 1
  18          {
  19   1        byte rByte;
  20   1        
  21   1        if(RI)
  22   1        {
  23   2          RI = 0;
  24   2          
  25   2          rByte = SBUF;
  26   2            
  27   2          if(rxIndex >= REVEIVE_BUFF_SIZE)
  28   2          {
  29   3            isRec = 0;
  30   3            rxIndex = 0;
  31   3          }
  32   2          if(rByte == 0x3b)
  33   2          {
  34   3            isRec = 1;
  35   3          }
  36   2          
  37   2          if(isRec)
  38   2          {
  39   3            buff[rxIndex++] = rByte;
  40   3          }
  41   2          
  42   2          
  43   2          if(rByte == 0x0d && isRec)
  44   2          {
  45   3            isHand = 1;
  46   3            isRec = 0;
  47   3            rxIndex = 0;
  48   3          }
  49   2        }
  50   1        
  51   1        if(TI)
  52   1        {
  53   2          TI = 0;
  54   2          buy = 0;
C51 COMPILER V9.56.0.0   UART1                                                             10/02/2017 20:59:50 PAGE 2   

  55   2        }
  56   1      }
  57          
  58          void sendData(byte dat)
  59          {
  60   1          while(buy);
  61   1        
  62   1          buy = 1;
  63   1          SBUF = dat;
  64   1      }
  65          
  66          void sendStr(char *dat)
  67          {
  68   1        while(*dat)
  69   1        {
  70   2          sendData(*dat++);
  71   2        }
  72   1      }
  73          void sendStrlen(char *dat,int len)
  74          {
  75   1        uint i;
  76   1        for(i=0;i<len;i++)
  77   1        {
  78   2          sendData(*(dat+i));
  79   2        }
  80   1      }
  81          
  82          
  83          
  84          void paraerData()
  85          {
  86   1        uint check = 0;
  87   1        if(isHand)
  88   1        {
  89   2          
  90   2          if(*buff == 0x3C)
  91   2          {
  92   3            //check=*(buff+1)+*(buff+2)+*(buff+3);
  93   3            //check &= 0xff;
  94   3            //if(check == *(buff+4))
  95   3            //{
  96   3                if(*(buff+1) == 0xAd)
  97   3              {
  98   4                  response = 1;
  99   4              }
 100   3              else if(*(buff+1) == 0xdd)
 101   3              {
 102   4                IAP_CONTR = 0x60;
 103   4              }
 104   3            //}
 105   3      
 106   3          }
 107   2          memset(buff,0,sizeof(buff));
 108   2          isHand = 0;
 109   2        }
 110   1        
 111   1      }
 112          
 113          
 114          void sleep(uint sleep)
 115          {
 116   1        uint i,j;
C51 COMPILER V9.56.0.0   UART1                                                             10/02/2017 20:59:50 PAGE 3   

 117   1        for(i = sleep ; i > 0 ; i --)
 118   1          for(j = 2000 ; j > 0 ; j --);
 119   1      }
 120          void sleep_us(unsigned int t)
 121          {
 122   1        uint i,j;
 123   1        for(i = t ; i > 0 ; i --)
 124   1          for(j = 3 ; j > 0 ; j --);
 125   1      }
 126          
 127          void UART1_Init()
 128          {
 129   1        SCON = 0X50;
 130   1        T2L = (65536 - (FOSC/4/BAUD));
 131   1        T2H = (65536 - (FOSC/4/BAUD)) >> 8;
 132   1        AUXR |= 0X14;
 133   1        AUXR |= 0X01;
 134   1        ES =1;
 135   1        EA = 1;
 136   1      }
 137          
 138          void opt_ss(unsigned char c1,unsigned char c2)
 139          {
 140   1        unsigned char dats[6];
 141   1        dats[0] = 0X3C;
 142   1        dats[1] = 0XA0;
 143   1        dats[2] = c1;
 144   1        dats[3] = c2;
 145   1        dats[4] =(dats[1]+dats[2]+dats[3]) & 0xff;
 146   1        dats[5] = 0x0d; 
 147   1        
 148   1        sendStrlen(dats,6);
 149   1        response = 0;
 150   1        
 151   1      }
 152          
 153          
 154          
 155          
 156          
 157          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    354    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      6      16
   IDATA SIZE       =     10    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
